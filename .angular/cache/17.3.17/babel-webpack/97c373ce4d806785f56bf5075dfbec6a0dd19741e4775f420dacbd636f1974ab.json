{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let WavOracleSocket = /*#__PURE__*/(() => {\n  class WavOracleSocket {\n    constructor() {\n      const path = document.location.pathname.replace(/share-target/, '') + 'socket.io';\n      this.socket = io('', {\n        path\n      });\n    }\n    // Add the fromEvent method that your downloads service needs\n    fromEvent(event) {\n      return new Observable(observer => {\n        this.socket.on(event, data => {\n          observer.next(data);\n        });\n        // Return cleanup function\n        return () => {\n          this.socket.off(event);\n        };\n      });\n    }\n    // Other socket methods\n    connect() {\n      this.socket.connect();\n    }\n    disconnect() {\n      this.socket.disconnect();\n    }\n    emit(event, data) {\n      this.socket.emit(event, data);\n    }\n    on(event, callback) {\n      this.socket.on(event, callback);\n    }\n    getSocket() {\n      return this.socket;\n    }\n    static {\n      this.ɵfac = function WavOracleSocket_Factory(t) {\n        return new (t || WavOracleSocket)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: WavOracleSocket,\n        factory: WavOracleSocket.ɵfac\n      });\n    }\n  }\n  return WavOracleSocket;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}