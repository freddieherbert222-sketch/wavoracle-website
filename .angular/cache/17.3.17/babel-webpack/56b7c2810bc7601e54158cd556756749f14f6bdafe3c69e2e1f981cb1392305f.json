{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"masterCheckbox\"];\nexport let MasterCheckboxComponent = /*#__PURE__*/(() => {\n  class MasterCheckboxComponent {\n    constructor() {\n      this.changed = new EventEmitter();\n    }\n    clicked() {\n      this.list.forEach(item => item.checked = this.selected);\n      this.selectionChanged();\n    }\n    selectionChanged() {\n      if (!this.masterCheckbox) return;\n      let checked = 0;\n      this.list.forEach(item => {\n        if (item.checked) checked++;\n      });\n      this.selected = checked > 0 && checked == this.list.size;\n      this.masterCheckbox.nativeElement.indeterminate = checked > 0 && checked < this.list.size;\n      this.changed.emit(checked);\n    }\n    static {\n      this.ɵfac = function MasterCheckboxComponent_Factory(t) {\n        return new (t || MasterCheckboxComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: MasterCheckboxComponent,\n        selectors: [[\"app-master-checkbox\"]],\n        viewQuery: function MasterCheckboxComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.masterCheckbox = _t.first);\n          }\n        },\n        inputs: {\n          id: \"id\",\n          list: \"list\"\n        },\n        outputs: {\n          changed: \"changed\"\n        },\n        decls: 4,\n        vars: 5,\n        consts: [[\"masterCheckbox\", \"\"], [1, \"form-check\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"ngModelChange\", \"change\", \"id\", \"ngModel\"], [1, \"form-check-label\", 3, \"for\"]],\n        template: function MasterCheckboxComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"input\", 2, 0);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function MasterCheckboxComponent_Template_input_ngModelChange_1_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.selected, $event) || (ctx.selected = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵlistener(\"change\", function MasterCheckboxComponent_Template_input_change_1_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.clicked());\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(3, \"label\", 3);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵpropertyInterpolate1(\"id\", \"\", ctx.id, \"-select-all\");\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selected);\n            i0.ɵɵadvance(2);\n            i0.ɵɵpropertyInterpolate1(\"for\", \"\", ctx.id, \"-select-all\");\n          }\n        },\n        dependencies: [i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgModel],\n        encapsulation: 2\n      });\n    }\n  }\n  return MasterCheckboxComponent;\n})();\nexport let SlaveCheckboxComponent = /*#__PURE__*/(() => {\n  class SlaveCheckboxComponent {\n    static {\n      this.ɵfac = function SlaveCheckboxComponent_Factory(t) {\n        return new (t || SlaveCheckboxComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: SlaveCheckboxComponent,\n        selectors: [[\"app-slave-checkbox\"]],\n        inputs: {\n          id: \"id\",\n          master: \"master\",\n          checkable: \"checkable\"\n        },\n        decls: 3,\n        vars: 7,\n        consts: [[1, \"form-check\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"ngModelChange\", \"change\", \"id\", \"ngModel\"], [1, \"form-check-label\", 3, \"for\"]],\n        template: function SlaveCheckboxComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function SlaveCheckboxComponent_Template_input_ngModelChange_1_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.checkable.checked, $event) || (ctx.checkable.checked = $event);\n              return $event;\n            });\n            i0.ɵɵlistener(\"change\", function SlaveCheckboxComponent_Template_input_change_1_listener() {\n              return ctx.master.selectionChanged();\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(2, \"label\", 2);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵpropertyInterpolate2(\"id\", \"\", ctx.master.id, \"-\", ctx.id, \"-select\");\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.checkable.checked);\n            i0.ɵɵadvance();\n            i0.ɵɵpropertyInterpolate2(\"for\", \"\", ctx.master.id, \"-\", ctx.id, \"-select\");\n          }\n        },\n        dependencies: [i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgModel],\n        encapsulation: 2\n      });\n    }\n  }\n  return SlaveCheckboxComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}